{"itemCount":3,"config":{"ttlInterval":250,"maximumItemCount":100,"targetPath":"feed.rss"},"feed":"<?xml version=\"1.0\" encoding=\"UTF-8\"?><rss version=\"2.0\" xmlns:atom=\"http:\/\/www.w3.org\/2005\/Atom\" xmlns:content=\"http:\/\/purl.org\/rss\/1.0\/modules\/content\"><channel><title>Reed Taylor<\/title><description>Reed's Blog and Portfolio<\/description><link>https:\/\/reedptaylor.github.io\/reed-portfolio\/<\/link><language>en<\/language><lastBuildDate>Fri, 1 May 2020 16:55:10 -0700<\/lastBuildDate><pubDate>Fri, 1 May 2020 16:55:10 -0700<\/pubDate><ttl>250<\/ttl><atom:link href=\"https:\/\/reedptaylor.github.io\/reed-portfolio\/feed.rss\" rel=\"self\" type=\"application\/rss+xml\"\/><item><guid isPermaLink=\"true\">https:\/\/reedptaylor.github.io\/reed-portfolio\/posts\/new-project-scrum<\/guid><title>Working with Blazor Server<\/title><description>Working with Blazor Server<\/description><link>https:\/\/reedptaylor.github.io\/reed-portfolio\/posts\/new-project-scrum<\/link><pubDate>Fri, 1 May 2020 16:21:00 -0700<\/pubDate><content:encoded><![CDATA[<h1>Working with Blazor Server<\/h1><h2>New Project - ScrumPokerCards<\/h2><p>Hello, recently I became Scrum certified and one of the take aways from the trainings was that Poker card estimation is very difficult to do in distributed work environments. Because I have been doing a lot of work in Blazor Server lately, I decided to put together a simple Blazor Server app to allow for user story estimation during Sprint planning.<\/p><p>There are two screens, one for the Scrum Master and one for the rest of the Scrum Team. The Scrum Master screen allows the Scrum Master to enter the story name, stop the voting, and start a new story (or repeat to find consensus). The normal screen allows a user to enter a name and vote on the size of a story. After voting, they wait for the Scrum Master to end the voting revealing the votes (or change their vote before voting ends).<\/p><p>Blazor Server is very powerful, especially for a use case with only one team using the site (the variables are stored in a Singleton service). Check out my progress or contribute on <a href=\"https:\/\/github.com\/reedptaylor\/ScrumPokerCards\">GitHub<\/a><\/p>]]><\/content:encoded><\/item><item><guid isPermaLink=\"true\">https:\/\/reedptaylor.github.io\/reed-portfolio\/posts\/first-post<\/guid><title>Welcome to my new website!<\/title><description>Starting new blog\/portfolio website<\/description><link>https:\/\/reedptaylor.github.io\/reed-portfolio\/posts\/first-post<\/link><pubDate>Sat, 8 Feb 2020 12:52:00 -0800<\/pubDate><content:encoded><![CDATA[<h1>Welcome to my new website!<\/h1><p>Hello, my name is Reed. I am a software engineering located in San Diego California. Currently, I work for Silvergate Bank and help them with their payments API and their Banking Portal (UI). I have had some fun projects done on the side such as my iOS apps Overdrive and Daiscover. As I continue to work on small projects for fun, I plan to post about them here.<\/p>]]><\/content:encoded><\/item><item><guid isPermaLink=\"true\">https:\/\/reedptaylor.github.io\/reed-portfolio\/overdrive\/privacy<\/guid><title>Overdrive Privacy<\/title><description><\/description><link>https:\/\/reedptaylor.github.io\/reed-portfolio\/overdrive\/privacy<\/link><pubDate>Sat, 8 Feb 2020 11:22:29 -0800<\/pubDate><content:encoded><![CDATA[<h1>Overdrive Privacy<\/h1><p>ewrfdef<\/p>]]><\/content:encoded><\/item><\/channel><\/rss>"}